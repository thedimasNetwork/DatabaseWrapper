/*
 * This file is generated by jOOQ.
 */
package stellar.database.gen.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import stellar.database.gen.tables.Bans;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BansRecord extends UpdatableRecordImpl<BansRecord> implements Record7<Integer, String, String, LocalDateTime, LocalDateTime, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mindustry.bans.id</code>.
     */
    public BansRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.bans.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mindustry.bans.admin</code>.
     */
    public BansRecord setAdmin(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.bans.admin</code>.
     */
    public String getAdmin() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mindustry.bans.target</code>.
     */
    public BansRecord setTarget(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.bans.target</code>.
     */
    public String getTarget() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mindustry.bans.created</code>.
     */
    public BansRecord setCreated(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.bans.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>mindustry.bans.until</code>.
     */
    public BansRecord setUntil(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.bans.until</code>.
     */
    public LocalDateTime getUntil() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>mindustry.bans.reason</code>.
     */
    public BansRecord setReason(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.bans.reason</code>.
     */
    public String getReason() {
        return (String) get(5);
    }

    /**
     * Setter for <code>mindustry.bans.active</code>.
     */
    public BansRecord setActive(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.bans.active</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, LocalDateTime, LocalDateTime, String, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, String, String, LocalDateTime, LocalDateTime, String, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Bans.bans.id;
    }

    @Override
    public Field<String> field2() {
        return Bans.bans.admin;
    }

    @Override
    public Field<String> field3() {
        return Bans.bans.target;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Bans.bans.created;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Bans.bans.until;
    }

    @Override
    public Field<String> field6() {
        return Bans.bans.reason;
    }

    @Override
    public Field<Boolean> field7() {
        return Bans.bans.active;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getAdmin();
    }

    @Override
    public String component3() {
        return getTarget();
    }

    @Override
    public LocalDateTime component4() {
        return getCreated();
    }

    @Override
    public LocalDateTime component5() {
        return getUntil();
    }

    @Override
    public String component6() {
        return getReason();
    }

    @Override
    public Boolean component7() {
        return getActive();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getAdmin();
    }

    @Override
    public String value3() {
        return getTarget();
    }

    @Override
    public LocalDateTime value4() {
        return getCreated();
    }

    @Override
    public LocalDateTime value5() {
        return getUntil();
    }

    @Override
    public String value6() {
        return getReason();
    }

    @Override
    public Boolean value7() {
        return getActive();
    }

    @Override
    public BansRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public BansRecord value2(String value) {
        setAdmin(value);
        return this;
    }

    @Override
    public BansRecord value3(String value) {
        setTarget(value);
        return this;
    }

    @Override
    public BansRecord value4(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public BansRecord value5(LocalDateTime value) {
        setUntil(value);
        return this;
    }

    @Override
    public BansRecord value6(String value) {
        setReason(value);
        return this;
    }

    @Override
    public BansRecord value7(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public BansRecord values(Integer value1, String value2, String value3, LocalDateTime value4, LocalDateTime value5, String value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BansRecord
     */
    public BansRecord() {
        super(Bans.bans);
    }

    /**
     * Create a detached, initialised BansRecord
     */
    public BansRecord(Integer id, String admin, String target, LocalDateTime created, LocalDateTime until, String reason, Boolean active) {
        super(Bans.bans);

        setId(id);
        setAdmin(admin);
        setTarget(target);
        setCreated(created);
        setUntil(until);
        setReason(reason);
        setActive(active);
    }
}
