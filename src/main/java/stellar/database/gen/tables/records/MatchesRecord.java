/*
 * This file is generated by jOOQ.
 */
package stellar.database.gen.tables.records;


import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import stellar.database.enums.PvpMode;
import stellar.database.gen.tables.Matches;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MatchesRecord extends UpdatableRecordImpl<MatchesRecord> implements Record4<Integer, OffsetDateTime, OffsetDateTime, PvpMode> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mindustry.matches.id</code>.
     */
    public MatchesRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.matches.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mindustry.matches.started</code>.
     */
    public MatchesRecord setStarted(OffsetDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.matches.started</code>.
     */
    public OffsetDateTime getStarted() {
        return (OffsetDateTime) get(1);
    }

    /**
     * Setter for <code>mindustry.matches.finished</code>.
     */
    public MatchesRecord setFinished(OffsetDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.matches.finished</code>.
     */
    public OffsetDateTime getFinished() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>mindustry.matches.mode</code>.
     */
    public MatchesRecord setMode(PvpMode value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.matches.mode</code>.
     */
    public PvpMode getMode() {
        return (PvpMode) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, OffsetDateTime, OffsetDateTime, PvpMode> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, OffsetDateTime, OffsetDateTime, PvpMode> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Matches.matches.id;
    }

    @Override
    public Field<OffsetDateTime> field2() {
        return Matches.matches.started;
    }

    @Override
    public Field<OffsetDateTime> field3() {
        return Matches.matches.finished;
    }

    @Override
    public Field<PvpMode> field4() {
        return Matches.matches.mode;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public OffsetDateTime component2() {
        return getStarted();
    }

    @Override
    public OffsetDateTime component3() {
        return getFinished();
    }

    @Override
    public PvpMode component4() {
        return getMode();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public OffsetDateTime value2() {
        return getStarted();
    }

    @Override
    public OffsetDateTime value3() {
        return getFinished();
    }

    @Override
    public PvpMode value4() {
        return getMode();
    }

    @Override
    public MatchesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public MatchesRecord value2(OffsetDateTime value) {
        setStarted(value);
        return this;
    }

    @Override
    public MatchesRecord value3(OffsetDateTime value) {
        setFinished(value);
        return this;
    }

    @Override
    public MatchesRecord value4(PvpMode value) {
        setMode(value);
        return this;
    }

    @Override
    public MatchesRecord values(Integer value1, OffsetDateTime value2, OffsetDateTime value3, PvpMode value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MatchesRecord
     */
    public MatchesRecord() {
        super(Matches.matches);
    }

    /**
     * Create a detached, initialised MatchesRecord
     */
    public MatchesRecord(Integer id, OffsetDateTime started, OffsetDateTime finished, PvpMode mode) {
        super(Matches.matches);

        setId(id);
        setStarted(started);
        setFinished(finished);
        setMode(mode);
    }
}
