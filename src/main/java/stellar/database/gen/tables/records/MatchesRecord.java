/*
 * This file is generated by jOOQ.
 */
package stellar.database.gen.tables.records;


import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;

import stellar.database.enums.PvpMode;
import stellar.database.gen.tables.Matches;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MatchesRecord extends UpdatableRecordImpl<MatchesRecord> implements Record10<Integer, OffsetDateTime, OffsetDateTime, PvpMode, String, String[], String[], String[], String[], Integer[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mindustry.matches.id</code>.
     */
    public MatchesRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.matches.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mindustry.matches.started</code>.
     */
    public MatchesRecord setStarted(OffsetDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.matches.started</code>.
     */
    public OffsetDateTime getStarted() {
        return (OffsetDateTime) get(1);
    }

    /**
     * Setter for <code>mindustry.matches.finished</code>.
     */
    public MatchesRecord setFinished(OffsetDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.matches.finished</code>.
     */
    public OffsetDateTime getFinished() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>mindustry.matches.mode</code>.
     */
    public MatchesRecord setMode(PvpMode value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.matches.mode</code>.
     */
    public PvpMode getMode() {
        return (PvpMode) get(3);
    }

    /**
     * Setter for <code>mindustry.matches.map</code>.
     */
    public MatchesRecord setMap(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.matches.map</code>.
     */
    public String getMap() {
        return (String) get(4);
    }

    /**
     * Setter for <code>mindustry.matches.team_a</code>.
     */
    public MatchesRecord setTeamA(String[] value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.matches.team_a</code>.
     */
    public String[] getTeamA() {
        return (String[]) get(5);
    }

    /**
     * Setter for <code>mindustry.matches.team_b</code>.
     */
    public MatchesRecord setTeamB(String[] value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.matches.team_b</code>.
     */
    public String[] getTeamB() {
        return (String[]) get(6);
    }

    /**
     * Setter for <code>mindustry.matches.team_c</code>.
     */
    public MatchesRecord setTeamC(String[] value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.matches.team_c</code>.
     */
    public String[] getTeamC() {
        return (String[]) get(7);
    }

    /**
     * Setter for <code>mindustry.matches.team_d</code>.
     */
    public MatchesRecord setTeamD(String[] value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.matches.team_d</code>.
     */
    public String[] getTeamD() {
        return (String[]) get(8);
    }

    /**
     * Setter for <code>mindustry.matches.delta_elo</code>.
     */
    public MatchesRecord setDeltaElo(Integer[] value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.matches.delta_elo</code>.
     */
    public Integer[] getDeltaElo() {
        return (Integer[]) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, OffsetDateTime, OffsetDateTime, PvpMode, String, String[], String[], String[], String[], Integer[]> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, OffsetDateTime, OffsetDateTime, PvpMode, String, String[], String[], String[], String[], Integer[]> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Matches.matches.id;
    }

    @Override
    public Field<OffsetDateTime> field2() {
        return Matches.matches.started;
    }

    @Override
    public Field<OffsetDateTime> field3() {
        return Matches.matches.finished;
    }

    @Override
    public Field<PvpMode> field4() {
        return Matches.matches.mode;
    }

    @Override
    public Field<String> field5() {
        return Matches.matches.map;
    }

    @Override
    public Field<String[]> field6() {
        return Matches.matches.teamA;
    }

    @Override
    public Field<String[]> field7() {
        return Matches.matches.teamB;
    }

    @Override
    public Field<String[]> field8() {
        return Matches.matches.teamC;
    }

    @Override
    public Field<String[]> field9() {
        return Matches.matches.teamD;
    }

    @Override
    public Field<Integer[]> field10() {
        return Matches.matches.deltaElo;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public OffsetDateTime component2() {
        return getStarted();
    }

    @Override
    public OffsetDateTime component3() {
        return getFinished();
    }

    @Override
    public PvpMode component4() {
        return getMode();
    }

    @Override
    public String component5() {
        return getMap();
    }

    @Override
    public String[] component6() {
        return getTeamA();
    }

    @Override
    public String[] component7() {
        return getTeamB();
    }

    @Override
    public String[] component8() {
        return getTeamC();
    }

    @Override
    public String[] component9() {
        return getTeamD();
    }

    @Override
    public Integer[] component10() {
        return getDeltaElo();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public OffsetDateTime value2() {
        return getStarted();
    }

    @Override
    public OffsetDateTime value3() {
        return getFinished();
    }

    @Override
    public PvpMode value4() {
        return getMode();
    }

    @Override
    public String value5() {
        return getMap();
    }

    @Override
    public String[] value6() {
        return getTeamA();
    }

    @Override
    public String[] value7() {
        return getTeamB();
    }

    @Override
    public String[] value8() {
        return getTeamC();
    }

    @Override
    public String[] value9() {
        return getTeamD();
    }

    @Override
    public Integer[] value10() {
        return getDeltaElo();
    }

    @Override
    public MatchesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public MatchesRecord value2(OffsetDateTime value) {
        setStarted(value);
        return this;
    }

    @Override
    public MatchesRecord value3(OffsetDateTime value) {
        setFinished(value);
        return this;
    }

    @Override
    public MatchesRecord value4(PvpMode value) {
        setMode(value);
        return this;
    }

    @Override
    public MatchesRecord value5(String value) {
        setMap(value);
        return this;
    }

    @Override
    public MatchesRecord value6(String[] value) {
        setTeamA(value);
        return this;
    }

    @Override
    public MatchesRecord value7(String[] value) {
        setTeamB(value);
        return this;
    }

    @Override
    public MatchesRecord value8(String[] value) {
        setTeamC(value);
        return this;
    }

    @Override
    public MatchesRecord value9(String[] value) {
        setTeamD(value);
        return this;
    }

    @Override
    public MatchesRecord value10(Integer[] value) {
        setDeltaElo(value);
        return this;
    }

    @Override
    public MatchesRecord values(Integer value1, OffsetDateTime value2, OffsetDateTime value3, PvpMode value4, String value5, String[] value6, String[] value7, String[] value8, String[] value9, Integer[] value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MatchesRecord
     */
    public MatchesRecord() {
        super(Matches.matches);
    }

    /**
     * Create a detached, initialised MatchesRecord
     */
    public MatchesRecord(Integer id, OffsetDateTime started, OffsetDateTime finished, PvpMode mode, String map, String[] teamA, String[] teamB, String[] teamC, String[] teamD, Integer[] deltaElo) {
        super(Matches.matches);

        setId(id);
        setStarted(started);
        setFinished(finished);
        setMode(mode);
        setMap(map);
        setTeamA(teamA);
        setTeamB(teamB);
        setTeamC(teamC);
        setTeamD(teamD);
        setDeltaElo(deltaElo);
    }
}
