/*
 * This file is generated by jOOQ.
 */
package stellar.database.gen.tables.records;


import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import stellar.database.gen.tables.EloHistory;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EloHistoryRecord extends UpdatableRecordImpl<EloHistoryRecord> implements Record7<Integer, OffsetDateTime, String, Integer, Integer, Integer, Float> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mindustry.elo_history.id</code>.
     */
    public EloHistoryRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.elo_history.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mindustry.elo_history.timestamp</code>.
     */
    public EloHistoryRecord setTimestamp(OffsetDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.elo_history.timestamp</code>.
     */
    public OffsetDateTime getTimestamp() {
        return (OffsetDateTime) get(1);
    }

    /**
     * Setter for <code>mindustry.elo_history.player</code>.
     */
    public EloHistoryRecord setPlayer(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.elo_history.player</code>.
     */
    public String getPlayer() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mindustry.elo_history.elo</code>.
     */
    public EloHistoryRecord setElo(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.elo_history.elo</code>.
     */
    public Integer getElo() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>mindustry.elo_history.delta</code>.
     */
    public EloHistoryRecord setDelta(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.elo_history.delta</code>.
     */
    public Integer getDelta() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>mindustry.elo_history.match</code>.
     */
    public EloHistoryRecord setMatch(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.elo_history.match</code>.
     */
    public Integer getMatch() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>mindustry.elo_history.result</code>.
     */
    public EloHistoryRecord setResult(Float value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>mindustry.elo_history.result</code>.
     */
    public Float getResult() {
        return (Float) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, OffsetDateTime, String, Integer, Integer, Integer, Float> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, OffsetDateTime, String, Integer, Integer, Integer, Float> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return EloHistory.eloHistory.id;
    }

    @Override
    public Field<OffsetDateTime> field2() {
        return EloHistory.eloHistory.timestamp;
    }

    @Override
    public Field<String> field3() {
        return EloHistory.eloHistory.player;
    }

    @Override
    public Field<Integer> field4() {
        return EloHistory.eloHistory.elo;
    }

    @Override
    public Field<Integer> field5() {
        return EloHistory.eloHistory.delta;
    }

    @Override
    public Field<Integer> field6() {
        return EloHistory.eloHistory.match;
    }

    @Override
    public Field<Float> field7() {
        return EloHistory.eloHistory.result;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public OffsetDateTime component2() {
        return getTimestamp();
    }

    @Override
    public String component3() {
        return getPlayer();
    }

    @Override
    public Integer component4() {
        return getElo();
    }

    @Override
    public Integer component5() {
        return getDelta();
    }

    @Override
    public Integer component6() {
        return getMatch();
    }

    @Override
    public Float component7() {
        return getResult();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public OffsetDateTime value2() {
        return getTimestamp();
    }

    @Override
    public String value3() {
        return getPlayer();
    }

    @Override
    public Integer value4() {
        return getElo();
    }

    @Override
    public Integer value5() {
        return getDelta();
    }

    @Override
    public Integer value6() {
        return getMatch();
    }

    @Override
    public Float value7() {
        return getResult();
    }

    @Override
    public EloHistoryRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public EloHistoryRecord value2(OffsetDateTime value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public EloHistoryRecord value3(String value) {
        setPlayer(value);
        return this;
    }

    @Override
    public EloHistoryRecord value4(Integer value) {
        setElo(value);
        return this;
    }

    @Override
    public EloHistoryRecord value5(Integer value) {
        setDelta(value);
        return this;
    }

    @Override
    public EloHistoryRecord value6(Integer value) {
        setMatch(value);
        return this;
    }

    @Override
    public EloHistoryRecord value7(Float value) {
        setResult(value);
        return this;
    }

    @Override
    public EloHistoryRecord values(Integer value1, OffsetDateTime value2, String value3, Integer value4, Integer value5, Integer value6, Float value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EloHistoryRecord
     */
    public EloHistoryRecord() {
        super(EloHistory.eloHistory);
    }

    /**
     * Create a detached, initialised EloHistoryRecord
     */
    public EloHistoryRecord(Integer id, OffsetDateTime timestamp, String player, Integer elo, Integer delta, Integer match, Float result) {
        super(EloHistory.eloHistory);

        setId(id);
        setTimestamp(timestamp);
        setPlayer(player);
        setElo(elo);
        setDelta(delta);
        setMatch(match);
        setResult(result);
    }
}
